name: Create Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Create Release
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --configuration Release --verbosity normal
      continue-on-error: true  # Allow tests to fail for now until we have proper test setup

    - name: Create Release Package
      shell: pwsh
      run: |
        # Get version from tag
        $version = $env:GITHUB_REF -replace 'refs/tags/v', ''

        # Create output directory
        $outputDir = "release"
        if (-not (Test-Path $outputDir)) {
            New-Item -Path $outputDir -ItemType Directory -Force | Out-Null
        }

        # Define the release package name
        $releasePackage = Join-Path -Path $outputDir -ChildPath "WallpaperChanger-v$version.zip"

        # Create a temporary directory for the release files
        $tempDir = Join-Path -Path $outputDir -ChildPath "temp"
        if (Test-Path $tempDir) {
            Remove-Item -Path $tempDir -Recurse -Force
        }
        New-Item -Path $tempDir -ItemType Directory -Force | Out-Null

        # Copy files to the temporary directory
        Copy-Item -Path "WallpaperChanger\bin\Release\net9.0-windows\WallpaperChanger.exe" -Destination $tempDir -Force
        Copy-Item -Path "WallpaperChanger\bin\Release\net9.0-windows\WallpaperChanger.dll" -Destination $tempDir -Force
        Copy-Item -Path "WallpaperChanger\bin\Release\net9.0-windows\WallpaperChanger.runtimeconfig.json" -Destination $tempDir -Force

        # Create Resources directory and copy icon
        $resourcesDir = Join-Path -Path $tempDir -ChildPath "Resources"
        New-Item -Path $resourcesDir -ItemType Directory -Force | Out-Null
        Copy-Item -Path "WallpaperChanger\bin\Release\net9.0-windows\Resources\wallpaper_icon.ico" -Destination $resourcesDir -Force

        # Copy scripts and documentation
        Copy-Item -Path "install.ps1" -Destination $tempDir -Force
        Copy-Item -Path "register_protocol.ps1" -Destination $tempDir -Force
        Copy-Item -Path "register_protocol_user.ps1" -Destination $tempDir -Force
        Copy-Item -Path "test_protocol.html" -Destination $tempDir -Force
        Copy-Item -Path "README.md" -Destination $tempDir -Force
        Copy-Item -Path "logo-120.png" -Destination $tempDir -Force
        Copy-Item -Path "RELEASE_NOTES.md" -Destination $tempDir -Force

        # Create the zip file
        if (Test-Path $releasePackage) {
            Remove-Item -Path $releasePackage -Force
        }

        Add-Type -AssemblyName System.IO.Compression.FileSystem
        [System.IO.Compression.ZipFile]::CreateFromDirectory($tempDir, $releasePackage)

        # Clean up
        Remove-Item -Path $tempDir -Recurse -Force

        # Set output variable for the release asset path
        echo "RELEASE_ASSET=$releasePackage" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Wallpaper Changer ${{ github.ref_name }}
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
        files: ${{ env.RELEASE_ASSET }}
